/*
 * Mandatory:
 *
 * vars.grafana.image.name
 * vars.grafana.image.version
 *
 * Optional:
 * 
 * vars.grafana.limits.cpu
 * vars.grafana.limits.memory
 * vars.grafana.requests.cpu
 * vars.grafana.requests.memory
 * vars.grafana.affinity.key
 * vars.grafana.affinity.name
 * vars.grafana.affinity.required
 * vars.grafana.allowOnMaster
 * vars.grafana.tolerations[].key
 * vars.grafana.tolerations[].effect
 * vars.grafana.tolerations[].value
 */

import "_affinities.stg"
import "_resources.stg"
import "_tolerations.stg"

/*
 *
 */
grafana-deployment-yaml(parent, vars) ::= <<
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: grafana
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "prometheus-operator"
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana:5.1.0
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        <resourcesGroup(parent, vars, vars.prometheusOperator.limits, vars.prometheusOperator.requests)>
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0
          name: grafana-dashboard-definitions
          readOnly: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: grafana
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - configMap:
          name: grafana-datasources
        name: grafana-datasources
      - configMap:
          name: grafana-dashboards
        name: grafana-dashboards
      - configMap:
          name: grafana-dashboard-definitions
        name: grafana-dashboard-definitions
<tolerationMasterGroup(parent, vars, vars.prometheusOperator.allowOnMaster)>
<tolerationsGroup(parent, vars, vars.prometheusOperator.tolerations, vars.prometheusOperator.allowOnMaster)>
<affinitiesGroup(parent, vars, vars.prometheusOperator.affinity)>

>>
